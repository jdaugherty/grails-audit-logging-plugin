name: Java CI
on:
  push:
    branches:
      - '[5-9].[0-9].x'
  pull_request:
    branches:
      - '[5-9].[0-9].x'
  workflow_dispatch:
env:
  GIT_USER_NAME: 'grails-build'
  GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Checkout the repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
      - name: "üî® Run Build"
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          DEVELOCITY_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          DEVELOCITY_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        run: ./gradlew check
  publish:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: "üì• Checkout the repository"
        uses: actions/checkout@v4
      - name: "‚òïÔ∏è Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "üêò Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
      - name: "üì§ Publish to Snapshot (repo.grails.org)"
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          MAVEN_PUBLISH_USERNAME: ${{ secrets.MAVEN_PUBLISH_USERNAME }}
          MAVEN_PUBLISH_PASSWORD: ${{ secrets.MAVEN_PUBLISH_PASSWORD }}
          MAVEN_PUBLISH_URL: ${{ secrets.MAVEN_PUBLISH_SNAPSHOT_URL }}
        working-directory: ./plugin
        run: ../gradlew publish
      - name: "üìú Generate Documentation"
        if: success()
        env:
          DEVELOCITY_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        working-directory: ./plugin
        run: ../gradlew docs
      - name: "üöÄ Publish to Github Pages"
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          SKIP_SNAPSHOT: ${{ contains(needs.publish.outputs.release_version, 'M') }}
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: plugin/build/docs
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}